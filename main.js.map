{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/service/backend.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to {{ title }}!\\n  </h1>\\n  \\n</div>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-4\\\">\\n      <mat-form-field>\\n        <mat-label>\\n          Clientes\\n        </mat-label>\\n        <mat-select>\\n          <mat-option *ngFor=\\\"let client of Clientes\\\" [value]=\\\"client.idclient\\\">\\n            {{client.name}}\\n          </mat-option>\\n        </mat-select>\\n    </mat-form-field>\\n    </div>\\n    <div class=\\\"col-md-4\\\">\\n        <mat-form-field>\\n            <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Fecha\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #picker></mat-datepicker>\\n          </mat-form-field>\\n    </div>\\n    <div class=\\\"col-md-4\\\">\\n          <mat-form-field>\\n              <input matInput placeholder=\\\"Hora\\\">\\n          </mat-form-field>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-4\\\">\\n        <mat-form-field>\\n            <input matInput placeholder=\\\"DirecciÃ³n\\\">\\n          </mat-form-field>\\n    </div>\\n    <div class=\\\"col-md-4\\\">\\n        <mat-form-field>\\n            <input matInput placeholder=\\\"Nombre del Colaborador\\\">\\n        </mat-form-field>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n<!--<router-outlet></router-outlet>!-->\\n\\n<div class=\\\"container\\\">\\n  <mat-accordion>\\n     <!-- <mat-expansion-panel>\\n          <mat-expansion-panel-header>\\n        <mat-panel-title>\\n            Registrar Productos\\n         </mat-panel-title>\\n        </mat-expansion-panel-header>\\n                <div class=\\\"form-group\\\">\\n                    <mat-form-field>\\n                      <input matInput  type=\\\"text\\\" placeholder=\\\"Introduzca Productos\\\" [(ngModel)] = \\\"producto.descripcion\\\">\\n                    </mat-form-field>\\n                  \\n                </div>   \\n                <div class=\\\"form-group\\\">\\n                    <mat-form-field>\\n                      <input matInput  type=\\\"number\\\" placeholder=\\\"Introduzca Pedidos\\\" [(ngModel)] = \\\"producto.pedido\\\">\\n                    </mat-form-field>\\n                 \\n                </div>  \\n                <div class=\\\"form-group\\\">\\n                    <mat-form-field>\\n                      <input matInput  type=\\\"number\\\" placeholder=\\\"Introduzca Suminstros\\\" [(ngModel)] = \\\"producto.suministro\\\">\\n                    </mat-form-field>\\n                   \\n                </div>\\n                <div class=\\\"form-group\\\">\\n                      <mat-form-field>\\n                        <input matInput  type=\\\"number\\\" placeholder=\\\"Introduzca Entregados\\\" [(ngModel)] = \\\"producto.entregado\\\">\\n                      </mat-form-field>\\n  \\n                </div>   \\n                <div class=\\\"row submit-button-container\\\">\\n                    <div class=\\\"col-md-4\\\">\\n                      <button mat-raised-button color=\\\"primary\\\" (click) = \\\"guardarProducto()\\\">Guardar</button>\\n                      <button mat-raised-button color=\\\"Link\\\">Limpiar</button>\\n                    </div>\\n                </div>\\n       </mat-expansion-panel>-->\\n       <mat-expansion-panel>\\n          <mat-expansion-panel-header>\\n            <mat-panel-title>\\n                Mostrar Productos\\n            </mat-panel-title>\\n          </mat-expansion-panel-header>\\n          <mat-form-field>\\n              <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filtrar Producto\\\">\\n            </mat-form-field>\\n          <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\" matSort (matSortChange)=\\\"sortData($event)\\\">\\n\\n              <!--- Note that these columns can be defined in any order.\\n                    The actual rendered columns are set as a property on the row definition\\\" -->\\n            \\n              <!-- Position Column -->\\n              <ng-container matColumnDef=\\\"idproducts\\\">\\n                <th mat-header-cell *matHeaderCellDef> Productos </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.idproducts}} </td>\\n              </ng-container>\\n            \\n              <!-- Name Column -->\\n              <ng-container matColumnDef=\\\"name\\\">\\n                <th mat-header-cell *matHeaderCellDef> Descripcion </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\n              </ng-container>\\n            \\n              <!-- Weight Column -->\\n              <ng-container matColumnDef=\\\"acode\\\">\\n                <th mat-header-cell *matHeaderCellDef> Suministros </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.acode}} </td>\\n              </ng-container>\\n            \\n              <!-- Symbol Column -->\\n              <ng-container matColumnDef=\\\"available\\\">\\n                <th mat-header-cell *matHeaderCellDef> Entregados </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.available}} </td>\\n              </ng-container>\\n          \\n              <ng-container matColumnDef=\\\"quantity\\\">\\n                  <th mat-header-cell *matHeaderCellDef> Cantidad </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.quantity}} </td>\\n                </ng-container>\\n            \\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n            </table>\\n            <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" [length]=\\\"100\\\"\\n            [pageSize]=\\\"10\\\"></mat-paginator>\\n          </mat-expansion-panel>\\n</mat-accordion>\\n</div>\\n\\n\\n\"","import { Component, ViewChild } from '@angular/core';\nimport { BackEndService } from './service/backend.service';\nimport { Guid } from \"guid-typescript\";\nimport { Producto } from './model/productos';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource, MatSort } from '@angular/material';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Demo';\n  //producto: any = {};\n  Clientes:any = [];\n  Producto:any = [];\n \n  dataSource = new MatTableDataSource<Producto>(); //:any = [] //MatTableDataSource<Producto>;\n  displayedColumns: string[] = ['idproducts', 'name', 'acode', 'available', 'quantity'];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  constructor(private backend:BackEndService){\n    this.getClients();\n  }\n\n  ngOnInit(){\n    \n    \n  }\n\n  ngAfterViewInit(){\n    this.backend.BuscarProductos()\n    .subscribe((productos) => {\n      this.dataSource.data = productos\n      console.log(this.dataSource.data);\n    });\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  //guardarProducto()\n  //{\n  //  this.producto.id = Guid.create();\n    //this.backend.GuardarProductos(this.producto);\n    //alert('Producto guardado con exito');\n      //  this.producto = {};\n  //}\n\ngetClients(){\n  this.backend.BuscarClientes()\n  .subscribe((clients) =>{\n  this.Clientes = clients\n  console.log(this.Clientes);\n  });\n}\n\n  getProductos(){\n    this.backend.BuscarProductos()\n      .subscribe((productos) => {\n        this.dataSource.data = productos\n          console.log(this.dataSource.data);\n      });\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n}\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireDatabaseModule } from \"@angular/fire/database\";\nimport { BackEndService } from './service/backend.service';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule }    from '@angular/common/http';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatDatepickerModule,MatNativeDateModule} from '@angular/material';\nimport {MatSortModule} from '@angular/material/sort';\nexport const firebaseConfig = {\n  apiKey: \"AIzaSyAezkWy34XBxo5-R1kdQxoZvqyXpdZLxjA\",\n  authDomain: \"productosbackend.firebaseapp.com\",\n  databaseURL: \"https://productosbackend.firebaseio.com\",\n  projectId: \"productosbackend\",\n  storageBucket: \"productosbackend.appspot.com\",\n  messagingSenderId: \"1020267188419\",\n  appId: \"1:1020267188419:web:5fdf4c61b880fed84f9276\",\n  measurementId: \"G-BPFNNN01YF\"\n};\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatExpansionModule,\n    AngularFireModule.initializeApp(firebaseConfig),\n     AngularFirestoreModule,\n     AngularFireDatabaseModule,\n     FormsModule,\n     HttpClientModule,\n     MatTableModule,\n     MatSelectModule,\n     MatPaginatorModule,\n     MatDatepickerModule,\n     MatNativeDateModule,\n     MatSortModule\n  ],\n  providers: [BackEndService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from \"@angular/core\";\r\nimport { AngularFireDatabase } from \"@angular/fire/database\";\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport {Producto} from '../model/productos'\r\nimport { clients } from '../model/clients';\r\n@Injectable()\r\n\r\nexport class BackEndService\r\n{\r\n  \r\n    prod: Observable<Producto[]>\r\n    constructor(private afdb:AngularFireDatabase, private http:HttpClient){\r\n\r\n    }\r\n\r\n    public GuardarProductos(producto){\r\n        console.log(producto);\r\n        this.afdb.database.ref('productosbackend/'+producto.id).set(producto);\r\n    }\r\n\r\n    public BuscarProductos(): Observable<Producto[]>{\r\n        //return this.lugares;\r\n       // return this.afdb.list('productosbackend/');\r\n       var url = 'http://206.189.238.132/getproducts.php'\r\n        return this.http.get<Producto[]>(url).pipe(\r\n                                                tap(_ => this.log('fetch Producto')),\r\n        catchError(this.handleError('BuscarProductos', [])));\r\n    }\r\n\r\n    public BuscarClientes(){\r\n        var url = 'http://206.189.238.132/getclients.php'\r\n        return this.http.get<clients[]>(url);\r\n    }\r\n\r\n    private handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n    \r\n          // TODO: send the error to remote logging infrastructure\r\n          console.error(error); // log to console instead\r\n    \r\n          // TODO: better job of transforming error for user consumption\r\n          this.log(`${operation} failed: ${error.message}`);\r\n    \r\n          // Let the app keep running by returning an empty result.\r\n          return of(result as T);\r\n        };\r\n      }\r\n\r\n    /** Log a HeroService message with the MessageService */\r\n  private log(message: string) {\r\n    console.log(message);\r\n  }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}